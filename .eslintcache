[{"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\index.js":"1","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\App.js":"2","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\reportWebVitals.js":"3","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MainComponent.js":"4","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\RouteComponent.js":"5","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MoreInfoComponent.js":"6","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WrapperComponent.js":"7","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\NavComponent.js":"8","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieList.js":"9","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieContainer.js":"10","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WishListComponent.js":"11"},{"size":436,"mtime":1610501208099,"results":"12","hashOfConfig":"13"},{"size":317,"mtime":1610500536079,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":481,"mtime":1610390783577,"results":"16","hashOfConfig":"13"},{"size":651,"mtime":1610493899878,"results":"17","hashOfConfig":"13"},{"size":9959,"mtime":1610501006141,"results":"18","hashOfConfig":"13"},{"size":638,"mtime":1610384130319,"results":"19","hashOfConfig":"13"},{"size":3650,"mtime":1610499927308,"results":"20","hashOfConfig":"13"},{"size":4985,"mtime":1610500213941,"results":"21","hashOfConfig":"13"},{"size":303,"mtime":1610235390462,"results":"22","hashOfConfig":"13"},{"size":201,"mtime":1610494043847,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1rjopzj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\index.js",[],["53","54"],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\App.js",["55"],"import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Main from './components/MainComponent';\n    \nclass App extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <Router>\n       <Main />\n      </Router>\n    );\n  }\n}\n\nexport default App;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\reportWebVitals.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MainComponent.js",["56","57"],"import React from 'react';\r\nimport SwitchRouter from './RouteComponent';\r\nimport MoreInfo from './MoreInfoComponent';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                {/* <Route exact path=\"/id/:id\" component={MoreInfo} /> */}\r\n                <Route path=\"/\" component={SwitchRouter} />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\RouteComponent.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MoreInfoComponent.js",["58","59","60"],"import React, { useState, useEffect } from 'react';\r\nimport './Components.css';\r\nimport defaultimg from '../images/notfound-sm-v.svg';\r\n\r\nfunction MoreInfo({ match }) {\r\n    const [thisMovie, setMData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let url = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=${match.params.id}`;\r\n        let xml = new XMLHttpRequest();\r\n        xml.open(\"GET\", url, true);\r\n        xml.onload = () => {\r\n            fetchMovieData(xml.response);\r\n        }\r\n        xml.send();\r\n    },[])\r\n\r\n    function fetchMovieData(data) {\r\n        setMData(data);\r\n    }\r\n\r\n    let tMovie = JSON.parse(thisMovie);\r\n    let myMovie;\r\n    let movieInfo;\r\n    console.log(tMovie);\r\n\r\n    if(thisMovie !== null) {\r\n        myMovie =  (\r\n                <>\r\n                    <div className=\"card bg-transparent dFlex movie-card-show\" style={{height: \"80%\", border: \"none\"}}>\r\n                        <img src={tMovie.Poster !== \"N/A\" ? tMovie.Poster : defaultimg} className=\"img-fluid card-img mt-2 card-img-show\" alt=\"Movie Poster Image\" />\r\n                        <div className=\"card-body pl-0 pb-0\">\r\n                            <span className=\"card-title fpoppins-1\" style={{color: \"#f0f5f1\"}}>{tMovie.Title}</span>\r\n                        </div>\r\n                    <div className=\"pt-5 w-100 dFlexSpaced-b\">\r\n                        <button className=\"btn btn-outline-warning mb-2\" onClick={() => window.history.back()}><i className=\"fa fa-arrow-left pr-2\"></i>Go Back</button>\r\n                        <span type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add To WishList\"><i className=\"far fa-bookmark pr-3 text-white\"></i></span>\r\n                    </div>\r\n                    </div>\r\n                </>\r\n        );\r\n\r\n        let movieEpisodes = (\r\n            <>\r\n                <div className=\"content-design dFlex justify-content-start\">\r\n                    <span className=\"tgrey pl-3 pr-3\">Seasons</span>\r\n                </div>\r\n                <div className=\"dFlex justify-content-start\">\r\n                    <span className=\"torange-light pl-3 pr-3 fmont-0-9\">{tMovie.totalSeasons}</span>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        movieInfo = (\r\n                <div className='movie-details dFlexColSpaced'>\r\n                        <div className=\"more-info plot\" style={{overflow: \"auto\"}}>\r\n                            <div className=\"col-12 px-0\" style={{cursor: \"pointer\"}}>\r\n                                <span data-target=\"#plot\" data-toggle=\"collapse\" className=\"d-flex card-header align-items-center justify-content-between\">\r\n                                    <span className=\"text-white float-left fmont-1-2\">Plot</span>\r\n                                    <span className=\"open-btn dFlex\"><i className=\"fa fa-arrow-down float-right text-white\"></i></span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-12 p-0\">\r\n                                <div id=\"plot\" className=\"card bg-transparent collapse\" style={{border: \"none\"}}>\r\n                                    <div className=\"card-body py-2\">\r\n                                        <span className=\"text-white fmont-1\">{tMovie.Plot}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info genre\" style={{overflow: \"auto\"}}>\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Genre</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.Genre}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info rating\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Rating</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.imdbRating} / 10</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info actors\" style={{overflow: \"auto\"}}>\r\n                            <div className=\"col-12 px-0\" style={{cursor: \"pointer\"}}>\r\n                                <span data-target=\"#actors\" data-toggle=\"collapse\" className=\"d-flex card-header align-items-center justify-content-between\">\r\n                                    <span className=\"text-white float-left fmont-1-2\">Actors</span>\r\n                                    <span className=\"open-btn dFlex\"><i className=\"fa fa-arrow-down float-right text-white\"></i></span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-12 p-0\">\r\n                                <div id=\"actors\" className=\"card bg-transparent collapse\" style={{border: \"none\"}}>\r\n                                    <div className=\"card-body pt-2\">\r\n                                        <span className=\"text-white fmont-1\">{tMovie.Actors}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info language\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Language</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.Language}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info type\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Type</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <div className=\"content-design dFlex justify-content-start\">\r\n                                        <span className=\"torange-light pl-2 pr-3 fmont-0-9\">{tMovie.Type}</span>\r\n                                    </div>\r\n                                    <div className=\"content-design dFlex justify-content-start\">\r\n                                        <span className=\"tgrey pl-3 pr-3\">Runtime</span>\r\n                                    </div>\r\n                                    <div className=\"content-design dFlex justify-content-start\">\r\n                                        <span className=\"torange-light pl-3 pr-3 fmont-0-9\">{tMovie.Runtime}</span>\r\n                                    </div>\r\n                                    {tMovie.Type === \"series\" ? movieEpisodes : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info year\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Realsed</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.Released}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{background: \"#4a4949\", height: \"91.5vh\"}}>\r\n            <div className=\"row\" style={{height: \"100%\"}}>\r\n                <div className=\"col-12 col-xl-4 dFlex\" style={{height: \"100%\", overflow: \"auto\"}}>\r\n                    {myMovie}\r\n                </div>\r\n                <div className=\"col-12 col-xl-8 dFlexCol\" style={{background: \"#3a3838\", height: \"100%\"}}>\r\n                    {movieInfo}\r\n                    <div className=\"container\">\r\n                        {thisMovie !== null ? <a href={`https://www1.cmovies.ac/movie/search/${tMovie.Title.replace(/\\s+/g, \"-\").replace(/[:+|?|,+]/g, \"\").toLowerCase()}`} target=\"_blank\" rel=\"noopener\" className=\"btn btn-outline-warning float-right mt-4\" style={{paddingLeft: \"40px\", paddingRight: \"40px\"}}><i className=\"fa fa-play pr-2\"></i>Watch {tMovie.Type}</a> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoreInfo;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WrapperComponent.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\NavComponent.js",["61"],"import React, { useState, useEffect } from 'react';\r\nimport './Components.css';\r\nimport homeimg from '../images/homeImage.jpeg';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const [transform, setState] = useState(false);\r\n    const searchHistory = useHistory(); \r\n\r\n    useEffect(() => {\r\n        if(window.location.pathname === \"/\") {\r\n            setState(false);\r\n        }\r\n        else if(window.location.pathname !== \"/\") {\r\n            setState(true);\r\n        }\r\n    })\r\n    \r\n    function search(e) {\r\n        let searchInput = document.querySelector(\"#searchInput\").value;\r\n\r\n        if(e.keyCode === 13) {\r\n            setState(true);\r\n            searchHistory.push(`/search/${searchInput.replace(/\\s+/g, \"-\").toLowerCase()}`);\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <nav className={!transform ? \"navbar navbar-dark bg-dark fixed-top h-100 navbar-expand-sm\" : \"navbar navbar-dark bg-dark sticky-top navbar-expand-sm\"} style={!transform ? {background: `url(${homeimg})`} : {transition: \"height 10s ease !important\"}} id=\"navbar\">\r\n                <div className={!transform ? \"container-fluid fixed-top mt-2\" : \"d-none\"}>\r\n                   <span className=\"navbar-brand mr-auto\">Movie Searcher</span>\r\n                   <div className=\"ml-auto d-flex align-items-center justify-content-center\">\r\n                           <button className=\"btn\">\r\n                                <span className=\"far fa-bookmark mr-2 text-white\"></span>\r\n                                <span className=\"d-none d-lg-inline text-white\">Wish List</span>\r\n                           </button>\r\n                    </div>\r\n                </div>\r\n                <NavLink to=\"/\" ><span className={!transform ? \"navbar-brand mr-auto d-none\" : \"navbar-brand mr-auto\"}>Movie Searcher</span></NavLink>\r\n                <div className=\"container mr-0 pr-0\">\r\n                     <div className=\"row-fluid d-flex justify-content-center w-100\">\r\n                        <div className=\"col-10\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\" style={!transform ? {background: \"white\", border: \"none\"} : {background: \"#FFAE00\", border: \"none\"}}>\r\n                                        <span className={!transform ? \"fa fa-search\" : \"fa fa-search text-white\"}></span>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"text\" id=\"searchInput\" className={!transform ? \"form-control pl-0 shadow-none\" : \"form-control\"} onKeyDown={search} style={!transform ? {height: \"60px\", border: \"none\"} : {border: \"none\"}}\r\n                                 spellCheck=\"false\" autoComplete=\"off\" placeholder=\"Search A Movie\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={!transform ? \"col d-none d-sm-flex align-items-center justify-content-center\" : \"col-2 d-flex align-items-center justify-content-center\"}>\r\n                           <button className={!transform ? \"btn d-none\" : \"btn\"} >\r\n                                <span className=\"far fa-bookmark mr-2 text-white\"></span>\r\n                                <NavLink to=\"/wishlist\" className=\"t-decoration-none\"><span className=\"d-none d-lg-inline text-white\">Wish List</span></NavLink>\r\n                           </button>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n}\r\n\r\nexport default Nav;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieList.js",["62","63"],"import React, { useState, useEffect } from 'react';\r\nimport defaultimg from '../images/notfound.svg';\r\nimport binocular from '../images/binocular.svg';\r\nimport './Components.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction MovieList(props) {\r\n    const [movieData, setMovieData] = useState(null);\r\n    const [pageCount, setPageCount] = useState(1);\r\n\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        let url = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&s=${props.searchValue.replace(/-+/g, \" \")}&page=${pageCount}`;\r\n        let xml = new XMLHttpRequest();\r\n        xml.open(\"GET\", url, true);\r\n        xml.onload = () => {\r\n            fetchData(xml.response);\r\n        }\r\n        xml.send();\r\n\r\n        if(!sessionStorage.pathname) {\r\n            sessionStorage.setItem(\"pathname\", JSON.stringify(`/search/${props.searchValue}`));\r\n        }\r\n    \r\n        if(sessionStorage.pathname) {\r\n            let previousPathname = JSON.parse(sessionStorage.getItem(\"pathname\"));\r\n            if(window.location.pathname !== previousPathname) {\r\n                setPageCount(1);\r\n                sessionStorage.setItem(\"pathname\", JSON.stringify(`/search/${props.searchValue}`));\r\n            }\r\n        }\r\n    })\r\n\r\n    function fetchData(data) {\r\n        setMovieData(data);\r\n    }\r\n\r\n    let movie_D = JSON.parse(movieData);\r\n    let movies;\r\n    let count = 0;\r\n    console.log(movie_D);\r\n    if(movieData !== null) {\r\n        if(movie_D.Response === \"True\") {\r\n            for(let i = 0; i < movie_D.Search.length; i++) {\r\n                 count += 7.7;\r\n            }\r\n        movies = movie_D.Search.map((movie) => {\r\n                return (\r\n                    <div key={movie.imdbID} className=\"card movie-card\" onClick={() => history.push(`/id/${movie.imdbID}`)} style={movie_D.Search.length < 10 ? {height: \"auto\"} : {height: `calc(100% - ${count.toFixed()}%)`}}>\r\n                        <img src={movie.Poster === \"N/A\" ? defaultimg : movie.Poster} alt={`Movie: ${movie.Title}`} width=\"100\" style={{height: \"80%\"}} className=\"img-fluid card-img-top\" />\r\n                        <div className=\"card-img-overlay\">\r\n                            <i className=\"fas fa-angle-double-right text-white h1\" /* style={{color: \"#f5a700\"}} */></i><br/><br/>\r\n                            <span className=\"text-white d-none d-sm-flex\">Click to get more details<br/>on<br/>{movie.Title}</span>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-12 px-0\">\r\n                                <h6 className=\"card-title text-white\">{movie.Title.length > 18 ? movie.Title.replace(movie.Title.substring(18, movie.Title.length), \"...\") : movie.Title}</h6>\r\n                            </div>\r\n                            <div className=\"card-text bg-primary d-none d-sm-block card-details-text\">\r\n                                <span className=\"text-muted float-left\">{movie.Type}</span>\r\n                                <span className=\"text-muted float-right\">{movie.Year}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n        });\r\n        }\r\n        else if(movie_D.Response === \"False\") {\r\n            movies = (\r\n                <div className=\"dFlexColSpaced\" style={{width: \"50%\", height: \"50%\"}}>\r\n                    <img src={binocular} width=\"200\" height=\"100\" alt=\"not found image\" />\r\n                    <h2>Movie Not Found!</h2>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    let pageBtns = (\r\n        <div className=\"col-12 dFlex justify-content-between\">\r\n            {movieData !== null && pageCount > 1 ? <button className=\"btn btn-outline-warning\" onClick={() => setPageCount(pageCount-1)}><i className=\"fa fa-arrow-left pr-2\"></i>Previous</button> : <div></div>}\r\n            {movieData !== null && movie_D.Search.length < 10 ? <div></div> : <button className=\"btn btn-outline-warning\" onClick={() => setPageCount(pageCount+1)}><i className=\"fa fa-arrow-right pr-2\"></i>Next</button>}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{paddingTop: \"20px\", minHeight: \"91.5vh\"}}>\r\n            <div className=\"row px-0 d-flex align-items-center justify-content-center\">\r\n                <div className=\"col-12 mb-1\">\r\n                    <span style={{font: \"1em Poppins, sans-serif\"}}>Search Results for {props.searchValue.replace(/-+/g, \" \")}</span>\r\n                </div>\r\n                <div className=\"col-12 d-flex justify-content-center\">\r\n                    <div className=\"movie-list-container\">\r\n                        {movieData !== null ? movies : <div></div>}\r\n                        {movieData !== null && movie_D.totalResults > 10 ? pageBtns : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieList;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieContainer.js",[],["64","65"],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WishListComponent.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":3,"nodeType":"72","messageId":"73","endLine":8,"endColumn":4},{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"78","line":4,"column":25,"nodeType":"76","messageId":"77","endLine":4,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":16,"column":7,"nodeType":"81","endLine":16,"endColumn":9,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":31,"column":25,"nodeType":"85","endLine":31,"endColumn":166},{"ruleId":"86","severity":1,"message":"87","line":158,"column":47,"nodeType":"85","endLine":158,"endColumn":309},{"ruleId":"79","severity":1,"message":"88","line":10,"column":5,"nodeType":"76","endLine":10,"endColumn":14,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"90","line":13,"column":5,"nodeType":"76","endLine":13,"endColumn":14,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"84","line":72,"column":21,"nodeType":"85","endLine":72,"endColumn":91},{"ruleId":"66","replacedBy":"92"},{"ruleId":"68","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'MoreInfo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["96"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect contains a call to 'setState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["97"],"React Hook useEffect contains a call to 'setPageCount'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.searchValue, pageCount] as a second argument to the useEffect Hook.",["98"],["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [match.params.id]",{"range":"105","text":"106"},"Add dependencies array: []",{"range":"107","text":"108"},"Add dependencies array: [props.searchValue, pageCount]",{"range":"109","text":"110"},[547,549],"[match.params.id]",[513,513],", []",[1273,1273],", [props.searchValue, pageCount]"]